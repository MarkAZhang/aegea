server {
  listen 127.0.0.1:8000;
  server_name localhost-api;

  root /var/www/arvados-api/current/public;
  index  index.html index.htm index.php;

  passenger_enabled on;

  # This value effectively limits the size of API objects users can
  # create, especially collections.  If you change this, you should
  # also ensure the following settings match it:
  # * `client_max_body_size` in the server section below
  # * `client_max_body_size` in the Workbench Nginx configuration (twice)
  # * `max_request_size` in the API server's application.yml file
  client_max_body_size 128m;
}

upstream api {
  server     127.0.0.1:8000  fail_timeout=10s;
}

upstream websockets {
  # The address below must match the one specified in puma's -b option.
  server     127.0.0.1:8100  fail_timeout=10s;
}

# proxy_http_version 1.1;

# When Keep clients request a list of Keep services from the API server, the
# server will automatically return the list of available proxies if
# the request headers include X-External-Client: 1.  Following the example
# here, at the end of this section, add a line for each netmask that has
# direct access to Keep storage daemons to set this header value to 0.
geo $external_client {
  default        1;
  10.20.30.0/24  0;
}

server {
  listen       *:$ARVADOS_API_ELB_FACING_PORT;
  server_name  $ARVADOS_UUID_PREFIX.$ARVADOS_HOSTNAME;

  index  index.html index.htm index.php;

  # Refer to the comment about this setting in the server section above.
  client_max_body_size 128m;

  location / {
    proxy_pass            http://api;
    proxy_redirect        off;
    proxy_connect_timeout 90s;
    proxy_read_timeout    300s;

    proxy_set_header      X-External-Client $external_client;
  }
}

server {
  listen       *:$ARVADOS_API_ELB_FACING_PORT;
  server_name  ws.$ARVADOS_UUID_PREFIX.$ARVADOS_HOSTNAME;

  index  index.html index.htm index.php;

  location / {
    proxy_pass            http://websockets;
    proxy_redirect        off;
    proxy_connect_timeout 90s;
    proxy_read_timeout    300s;

    proxy_set_header      Upgrade $http_upgrade;
    proxy_set_header      Connection "upgrade";
  }
}
