#!/usr/bin/env python3
# PYTHON_ARGCOMPLETE_OK

from __future__ import absolute_import, division, print_function, unicode_literals

import os, sys, subprocess, argparse, base64
import argcomplete
import aegea
from aegea.util.aws import ARN

default_missions_dir = os.path.join(os.path.dirname(aegea.__file__), "missions")

def get_missions(**kwargs):
    return os.listdir(default_missions_dir)

parser = argparse.ArgumentParser(description="Build an AMI using a mission pack")
parser.add_argument("mission").completer = get_missions
parser.add_argument("image_name")
parser.add_argument("--image-type", choices={"ami", "docker"}, default="docker")
parser.add_argument("--mission-dir", default=default_missions_dir)
argcomplete.autocomplete(parser)
args = parser.parse_args()

if os.path.exists(os.path.join(args.mission_dir, args.mission, "Makefile")):
    subprocess.check_call(["make", "-C", os.path.join(args.mission_dir, args.mission)])

if args.image_type == "docker":
    subprocess.check_call([
        "aegea", "batch", "submit", "--watch", "--image", "ubuntu:14.04", "--privileged",
        "--environment",
        "TAG=latest",
        "REPO=" + args.image_name,
        "DOCKERFILE=" + base64.b64encode(open("FIXME", "rb").read()).decode(),
        "AWS_DEFAULT_REGION=" + ARN.get_region(),
        "AWS_ACCOUNT_ID=" + ARN.get_account_id(),
        "--command", ";".join(["set -euxo pipefail",
                               "apt-get update --quiet",
                               "apt-get install --quiet --yes docker.io python-pip",
                               "pip install awscli",
                               "cd $(mktemp -d)",
                               "aws configure set default.region $AWS_DEFAULT_REGION",
                               "$(aws ecr get-login)",
                               'echo "$DOCKERFILE" | base64 --decode > Dockerfile',
                               'TAG="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${REPO}:${TAG}"',
                               'docker build -t "$TAG" .',
                               'docker push "$TAG"'])
    ])
else:
    subprocess.check_call(
        ["aegea", "build_ami", args.ami_name, "--tags", "AegeaMission=" + args.mission],
        env=dict(os.environ, AEGEA_CONFIG_FILE=os.path.join(args.mission_dir, args.mission, "config.yml"))
    )
